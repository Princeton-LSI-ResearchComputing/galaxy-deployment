---
- name: test connection
  ping:

- name: create error-documents folder
  file: path={{ GALAXY_HOME }}/../www/html/error-documents/ state=directory mode=755
  tags: start,stop,restart,update

- name: error-documents
  copy: src="error-documents/" dest={{ GALAXY_HOME }}/../www/html/error-documents/ mode=0644
  tags: start,stop,restart,update

- name: set galaxy user git config
  copy: src="git_config/gitconfig" dest="{{ ansible_env.HOME }}/.gitconfig"
  tags:
    - userconfig

- name: set galaxy user pgpass
  template:
    src: "pgpass/pgpass.j2"
    dest: "{{ ansible_env.HOME }}/.pgpass"
    mode: '0600'
  tags:
    - userconfig

- stat: path="{{ GALAXY_HOME }}/.git"
  register: git
  tags: update

- include: stop_galaxy.yml
  tags: stop,restart,update

  # - name: checkout upstream branch
  #   command: "{{ git_executable | default('git') }} checkout {{ galaxy_changeset_id }} chdir={{ GALAXY_HOME }}"
  #   args:
  #     chdir: "{{ GALAXY_HOME }}"
  #   environment:
  #     PATH: /usr/local/bin:{{ ansible_env.PATH }}
  #   when: git.stat.isdir is defined and git.stat.isdir == true
  #   tags: update

  # - include: backup_loc_files.yaml

- name: Get current Galaxy commit id (git)
  command: "{{ git_executable | default('git') }} rev-parse HEAD chdir={{ GALAXY_HOME }}"
  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}
  register: current_changeset_id
  changed_when: False
  when: git.stat.isdir is defined and git.stat.isdir == true
  tags: update

- name: Report current Galaxy changeset
  debug:
    msg: "Current changeset of {{ GALAXY_HOME }} {{ current_changeset_id.stdout }} does not match playbook version {{ galaxy_changeset_id }}"
  changed_when: True
  when: (git.stat.isdir is defined and git.stat.isdir == true) and (current_changeset_id.stdout != galaxy_changeset_id)
  tags: update

- name: Get current tool migration stages
  shell: ls -1 *tools.sh | sort chdir={{ GALAXY_HOME }}/scripts/migrate_tools/
  register: current_tool_migration_stages
  changed_when: False
  when: git.stat.isdir is defined and git.stat.isdir == true
  tags: update

- name: Update galaxy to correct changeset
  git:
    dest: "{{ GALAXY_HOME }}"
    force: "yes"
    repo: "https://github.com/galaxyproject/galaxy.git"
    version: "{{ galaxy_changeset_id }}"
    executable: "{{ git_executable | default(omit) }}"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  tags: update
  #notify:
  #  - restart galaxy

# Problems using installed virtualenv, for now create manually
# - include: virtualenv.yml
#  tags: virtualenv

- name: Get updated tool migration stage
  shell: ls -1 *tools.sh | sort chdir={{ GALAXY_HOME }}/scripts/migrate_tools/
  register: updated_tool_migration_stages
  changed_when: False
  tags: update

- include: patches.yml
  tags: update

- name: add legacy tools (not from toolshed)
  copy: src="galaxy_legacy_tools/tools/" dest="{{ GALAXY_HOME }}/tools/" backup=yes
  tags: legacy_tools

- name: add legacy tool test-data
  copy: src="galaxy_legacy_tools/test-data/" dest="{{ GALAXY_HOME }}/test-data/" backup=yes

- name: add legacy jars
  copy: src="galaxy_legacy_tools/tool-data/" dest="{{ GALAXY_HOME }}/tool-data/" backup=yes

- name: create logrotate config directory
  file: dest={{ GALAXY_HOME }}/config/logrotate state=directory

- name: config templates
  template:
    src: "config/{{ item }}.j2"
    dest: "{{ config_directory }}/{{ item }}"
    backup: "yes"
  with_items:
    - "galaxy.ini"
    - "reports.ini"
    - "job_conf.xml"
    - "tool_sheds_conf.xml"
    - "tool_conf.xml"
    - "logrotate/logrotate.conf"
  tags:
    config

- name: config files
  copy:
      src: "config/{{ item }}"
      dest: "{{ config_directory }}/{{ item }}"
      backup: "yes"
  with_items:
      - "dependency_resolvers_conf.xml"
      - "datatypes_magenta_conf.xml"
      - "tool_destinations.yml"
  tags:
    config

- name: dynamic job destinations.py
  copy: src=dynamic_destinations/destinations.py dest={{ GALAXY_HOME }}/lib/galaxy/jobs/rules/destinations.py
  tags:
    config

- name: local_env.sh
  template: src="config/local_env.sh.j2" dest="{{ GALAXY_HOME }}/config/local_env.sh" backup=yes
  tags: start,stop,restart,update

- name: create tmp dir
  file: path={{ tmp_dir }} state=directory mode=750

- name: create log directory
  file:
      path: "{{ GALAXY_HOME }}/../logs"
      state: directory
      mode: '2755'

- include: hide_tools.yml
  tags:
    - update
    - config

- name: tool-data files
  copy:
    src: "tool-data/"
    dest: "{{ GALAXY_HOME }}/tool-data/"
    backup: "yes"
  register: tooldata
  tags: genome_builds

- name: tool-data templates
  template:
    src: "tool-data/{{ item }}.j2"
    dest: "{{ GALAXY_HOME }}/tool-data/{{ item }}"
  with_items:
    - "ccat_configurations.loc"

- name: test uscs/builds.txt exists
  stat:
    path: "tool-data/shared/ucsc/builds.txt"
  register: "ucsc_builds"
  tags: genome_builds

- name: update builds
  command: "{{ galaxy_venv_dir }}/bin/python cron/add_manual_builds.py tool-data/shared/ucsc/manual_builds.txt tool-data/shared/ucsc/builds.txt tool-data/shared/ucsc/chrom/ chdir={{ GALAXY_HOME }}"
  when: tooldata.changed and ucsc_builds.stat.exists == True
  tags: genome_builds

- name: welcome.html
  template: src=welcome.html.j2 dest={{ GALAXY_HOME }}/static/welcome.html backup=yes owner=galaxy group=galaxy mode=0644
  tags:
      - update
      - welcome

- include: tool-dependencies.yaml

- include: custom_scripts.yaml
  tags: scripts

- include: crontab.yaml
  tags: crontab

- include: taxonomy_tool_data.yaml

- name: Get current Galaxy DB version
  command: "{{ GALAXY_HOME }}/scripts/common_startup.sh && {{ GALAXY_HOME }}/manage_db.sh db_version chdir={{ GALAXY_HOME }}"
  register: current_db_version
  changed_when: False
  tags: update

- name: Get maximum Galaxy DB version
  command: "{{ GALAXY_HOME }}/scripts/common_startup.sh && {{ GALAXY_HOME }}/manage_db.sh version chdir={{ GALAXY_HOME }}"
  register: max_db_version
  changed_when: False
  tags: update

- include: backup_database.yaml
  when: current_db_version.stdout != max_db_version.stdout
  tags: update

- name: Upgrade Galaxy DB
  shell:
      "{{ GALAXY_HOME }}/scripts/common_startup.sh && {{ GALAXY_HOME }}/manage_db.sh upgrade"
  args:
      chdir: "{{ GALAXY_HOME }}"
  when: current_db_version.stdout != max_db_version.stdout
  tags: update

- name: Report current tool migration stage
  debug:
    msg: "There are {{ updated_tool_migration_stages.stdout_lines|length - current_tool_migration_stages.stdout_lines|length }} new tool migration stages for {{ GALAXY_HOME }}"
  changed_when: True
  when: current_tool_migration_stages.stdout_lines|length != updated_tool_migration_stages.stdout_lines|length
  tags: update

- name: Run tool migrations
  shell: ". {{ galaxy_venv_dir}}/bin/activate && sh ./scripts/migrate_tools/{{ item }} install_dependencies chdir={{ GALAXY_HOME }}"
  changed_when: True
  when: updated_tool_migration_stages.stdout_lines|length - current_tool_migration_stages.stdout_lines|length > 0
  with_items:
    updated_tool_migration_stages.stdout_lines[-(updated_tool_migration_stages.stdout_lines|length - current_tool_migration_stages.stdout_lines|length)]
  tags: update

- name: Create tool_conf.xml patch
  shell: "diff -u tool_conf.xml-pre-stage-{{ item[:4] }} tool_conf.xml > tool_conf.xml-{{ item[:4] }}.diff chdir={{ GALAXY_HOME }} creates={{ GALAXY_HOME }}/tool_conf.xml-{{ item[:4] }}.diff"
  changed_when: True
  when: updated_tool_migration_stages.stdout_lines|length - current_tool_migration_stages.stdout_lines|length > 0
  with_items:
    updated_tool_migration_stages.stdout_lines[-1]
  register: diff_result
  failed_when: diff_result.rc > 1
  tags: update

- name: Fetch tool_conf.xml diff
  fetch: src={{ GALAXY_HOME }}/tool_conf.xml-{{ item[:4] }}.diff dest=tool_conf_diffs/{{ ansible_hostname }}/tool_conf.xml-{{ item[:4] }}.diff flat=yes
  when: updated_tool_migration_stages.stdout_lines|length - current_tool_migration_stages.stdout_lines|length > 0
  with_items:
    updated_tool_migration_stages.stdout_lines[-1]
  tags: update

- include: start_galaxy.yml
  tags: start,restart,update
